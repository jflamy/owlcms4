# Note: the azure build runs under the ubuntu-latest image
# That image only includes Java 11. The Java 17 compilation is done in a container, but other steps
# run directly in the image.  Some steps run in both settings, and this is why JAVA_HOME_11_X64 
# must be defined

parameters:
  - name: jobName
    type: string
    default: ''
  - name: moduleName
    type: string
    default: ''
  - name: artifactName
    type: string
    default: ''
  - name: skipTests
    type: string
    default: 'false'

jobs:
  # build owlcms uberjar and zip to be used by installer
  - job: ${{ parameters.jobName }}
    pool:
      vmImage: ubuntu-latest
    container: maven:3.9.3-eclipse-temurin-17
    variables:
      - name: JAVA_HOME_11_X64
        value: /opt/java/openjdk
    steps:
      # Node.js tool installer
      # Finds or downloads and caches the specified version spec of Node.js and adds it to the PATH
 #     - task: NodeTool@0
 #       displayName: install nodejs 18.17.1
 #       inputs:
 #         versionSpec: '18.17.1' 
 #         #force32bit: false # Optional
 #         #checkLatest: false # Optional
      - template: steps-prepare-maven.yml
      - task: Maven@3.205.1
        displayName: build ${{ parameters.moduleName }} uberJar and publish to maven repository
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MavenOpts)
          javaHomeSelection: 'path'
          jdkDirectory: '/opt/java/openjdk'
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          effectivePomSkip: true
          goals: -P production -pl ${{ parameters.moduleName }} -am $(MavenOpts) -Dmaven.test.skip=${{ parameters.skipTests }} $(BuildGoal)
      - publish: $(Agent.BuildDirectory)/s/${{ parameters.moduleName }}/target/prerelease/${{ parameters.moduleName }}_$(Revision).zip
        artifact: ${{ parameters.artifactName }}
